
        
  // @ts-nocheck
  // eslint-disable
  /** 
  * ---------------------------------------------------
  * ðŸš—ðŸš¦ Generated by nuxt-typed-router. Do not modify !
  * ---------------------------------------------------
  * */
 


        
    
  /**
   * Exhaustive list of all the available route names in the app
   * */
  export type RoutesNamesList = 'index-page'|
'index'

    
  /** 
   * Routes params are only required for the exact targeted route name,
   * vue-router behaviour allow to navigate between children routes without the need to provide all the params every time.
   * So we can't enforce params when navigating between routes, only a `[xxx].vue` page will have required params in the type definition
   * 
   * */
  export type RoutesParamsRecord = {
    "index-page": {
                "page": (string | number)
        },
"index": never
  }
    
    
  /** 
   * Record resolved used for resolved routes
   * 
   * */
  export type RoutesParamsRecordResolved = {
    "index-page": {
                "page": string
        },
"index": never
  }

    
  /**
   * Discriminated union that will allow to infer params based on route name
   * It's used for programmatic navigation like router.push or <NuxtLink/>
   * */
  export type RoutesNamedLocations = 
    {name: "index-page" , params: {
          "page": (string | number)
        }}|
{name: "index" }
  

    
  /**
   * Type returned by a resolved Route that will allow to type guard the route name.
   * By default the params are unknown
   * */
  export type RoutesNamedLocationsResolved = 
  {
    name: RoutesNamesList;
    params: unknown;
  } & (
    {name: "index-page" , params: {
                "page": string
        }}|
{name: "index" }
      )
  

    export type RoutesNamesListRecord = {"indexPage": "index-page","index": "index"};

    export const routesNames = {'indexPage': 'index-page' as const,'index': 'index' as const,};
  
      